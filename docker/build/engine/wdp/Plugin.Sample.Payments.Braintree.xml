<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plugin.Sample.Payments.Braintree</name>
    </assembly>
    <members>
        <member name="T:Plugin.Sample.Payments.Braintree.ConfigureSitecore">
            <summary>
            The payments braintree configure sitecore class
            </summary>
            <seealso cref="T:Sitecore.Framework.Configuration.IConfigureSitecore" />
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.ConfigureSitecore.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            The configure services.
            </summary>
            <param name="services">
            The services.
            </param>
            
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.ComponentsHelper">
            <summary>
             A Components Helper to translate party for address request
            </summary>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.ComponentsHelper.TranslatePartyToAddressRequest(Sitecore.Commerce.Core.Party)">
            <summary>
            Translates the party to address request.
            </summary>
            <param name="party">The party.</param>
            <returns>A <see cref="T:Braintree.AddressRequest"/></returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants">
            <summary>
            The payments constants.
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.GetClientTokenBlock">
            <summary>
            The get client token block name.
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.UpdateFederatedPaymentBlock">
            <summary>
            The add federated payment block
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.UpdateOrderAfterFederatedPaymentSettlementBlock">
            <summary>
            The update order after federated payment settlement block name
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.CreateFederatedPaymentBlock">
            <summary>
            The create federated payment block
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.SettleFederatedPaymentBlock">
            <summary>
            The settle federated payment block name
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.VoidCancelOrderFederatedPaymentBlock">
            <summary>
            The void cancel order federated payment block
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.RefundFederatedPaymentBlock">
            <summary>
            The refund federated payment block
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.RegisteredPluginBlock">
            <summary>
            The registered plugin block name.
            </summary>
        </member>
        <member name="F:Plugin.Sample.Payments.Braintree.PaymentsBraintreeConstants.SettleOrderSalesActivitiesBlock">
            <summary>
            Settle order sales activities block name.
            </summary>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.CreateFederatedPaymentBlock">
            <summary>
             Defines a block which creates a payment service transaction.
            </summary>  
            <seealso>
              <cref>
            Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Orders.CartEmailArgument, Sitecore.Commerce.Plugin.Orders.CartEmailArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
            </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.CreateFederatedPaymentBlock.RunAsync(Sitecore.Commerce.Plugin.Orders.CartEmailArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            A cart with federate payment component
            </returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.GetClientTokenBlock">
            <summary>
             Defines a block which gets a payment service client tokent.
            </summary>
            <seealso>
            <cref>
             Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.String, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
             </cref>
             </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.GetClientTokenBlock.RunAsync(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A client token string</returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.RefundFederatedPaymentBlock">
            <summary>
            Defines a refund federated paymentBlock.
            </summary>
            <seealso>
            <cref>
               Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Payments.OrderPaymentsArgument, 
               Sitecore.Commerce.Plugin.Payments.Order, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
            </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.RefundFederatedPaymentBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Sample.Payments.Braintree.RefundFederatedPaymentBlock"/> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.RefundFederatedPaymentBlock.RunAsync(Sitecore.Commerce.Plugin.Payments.OrderPaymentsArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            An OrderPaymentsArgument with order and Federated existingPayment info
            </returns>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.RefundFederatedPaymentBlock.GenerateSalesActivity(Sitecore.Commerce.Plugin.Orders.Order,Sitecore.Commerce.Plugin.Payments.PaymentComponent,Sitecore.Commerce.Plugin.Payments.PaymentComponent,System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Generates the sales activity.
            </summary>
            <param name="order">The order.</param>
            <param name="existingPayment">The existingPayment.</param>
            <param name="paymentToRefund">The payment to refund</param>
            <param name="refundTransactionId">The refund transaction identifier.</param>
            <param name="context">The context.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task" />
            </returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.RegisteredPluginBlock">
            <summary>
            Defines the registered plugin block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.RegisteredPluginModel},
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.RegisteredPluginModel},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.RegisteredPluginBlock.Run(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.RegisteredPluginModel},Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The list of <see cref="T:Sitecore.Commerce.Core.RegisteredPluginModel"/>
            </returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.SettleOrderSalesActivitiesBlock">
            <summary>
             Defines the settle order sales activities block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Orders.Order,
                    Sitecore.Commerce.Plugin.Orders.Order, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.SettleOrderSalesActivitiesBlock.#ctor(Sitecore.Commerce.Core.CommerceCommander)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Sample.Payments.Braintree.SettleOrderSalesActivitiesBlock"/> class.
            </summary>
            <param name="commander">The commander.</param>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.SettleOrderSalesActivitiesBlock.RunAsync(Sitecore.Commerce.Plugin.Orders.Order,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Plugin.Orders.Order"/></returns>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.SettleOrderSalesActivitiesBlock.SettleSalesActivity(Sitecore.Commerce.Plugin.Orders.SalesActivity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Settle a sales activity
            </summary>
            <param name="salesActivity">The sales activity</param>
            <param name="context">The pipeline context</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.UpdateFederatedPaymentBlock">
            <summary>
            Defines a block which updates transaction Id for an order.
            </summary>   
            <seealso>
              <cref>
            Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Orders.Order, Sitecore.Commerce.Plugin.Orders.Order, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
            </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.UpdateFederatedPaymentBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Sample.Payments.Braintree.UpdateFederatedPaymentBlock" /> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.UpdateFederatedPaymentBlock.RunAsync(Sitecore.Commerce.Plugin.Orders.Order,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            A cart with federate payment component
            </returns>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.UpdateFederatedPaymentBlock.GenerateSalesActivity(Sitecore.Commerce.Plugin.Orders.Order,Sitecore.Commerce.Plugin.Payments.PaymentComponent,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Generates the sales activity.
            </summary>
            <param name="order">The order.</param>
            <param name="payment">The payment.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.UpdateOrderAfterFederatedPaymentSettlementBlock">
            <summary>
            Defines a block which updates an order after the federated payment has been settled.
            </summary>   
            <seealso>
              <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Orders.SalesActivity,
                    Sitecore.Commerce.Plugin.Orders.SalesActivity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
              </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.UpdateOrderAfterFederatedPaymentSettlementBlock.#ctor(Sitecore.Commerce.Plugin.Orders.GetOrderCommand,Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Sample.Payments.Braintree.UpdateOrderAfterFederatedPaymentSettlementBlock"/> class.
            </summary>
            <param name="getOrderCommand">The get order command.</param>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.UpdateOrderAfterFederatedPaymentSettlementBlock.RunAsync(Sitecore.Commerce.Plugin.Orders.SalesActivity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            A cart with federate payment component
            </returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.VoidCancelOrderFederatedPaymentBlock">
            <summary>
            Defines a void canceled order federated paymentBlock.
            </summary>
            <seealso>
            <cref>
              Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Payments.Order, 
              Sitecore.Commerce.Plugin.Payments.Order, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
            </cref>
            </seealso>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.VoidCancelOrderFederatedPaymentBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Sample.Payments.Braintree.VoidCancelOrderFederatedPaymentBlock"/> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.VoidCancelOrderFederatedPaymentBlock.RunAsync(Sitecore.Commerce.Plugin.Orders.Order,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>An order with Federated payment info</returns>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.VoidCancelOrderFederatedPaymentBlock.GenerateSalesActivity(Sitecore.Commerce.Plugin.Orders.Order,Sitecore.Commerce.Plugin.Payments.PaymentComponent,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Generates the sales activity.
            </summary>
            <param name="order">The order.</param>
            <param name="payment">The payment.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy">
            <summary>
            Defines the Braintree Client Policy for Payments.
            </summary>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy" /> class.
            </summary>
        </member>
        <member name="P:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy.MerchantId">
            <summary>
            Gets or sets the merchant identifier.
            </summary>
            <value>
            The merchant identifier.
            </value>
        </member>
        <member name="P:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>
            The public key.
            </value>
        </member>
        <member name="P:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>
            The private key.
            </value>
        </member>
        <member name="M:Plugin.Sample.Payments.Braintree.BraintreeClientPolicy.IsValid(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Returns true if ... is valid.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>Returns true if ... is valid.</returns>
        </member>
    </members>
</doc>
