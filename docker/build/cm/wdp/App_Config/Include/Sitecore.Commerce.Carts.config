<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <!--  Commerce ENTITIES
          Contains all the Commerce cart entities.
          The configuration can be used to substitute the default entity implementation with extended one.
    -->
    <commerce.Entities>
      <CartBase type="Sitecore.Commerce.Entities.Carts.CartBase, Sitecore.Commerce.Connect.Core" />
      <Cart type="Sitecore.Commerce.Entities.Carts.Cart, Sitecore.Commerce.Connect.Core" />
      <CartAdjustment type="Sitecore.Commerce.Entities.Carts.CartAdjustment, Sitecore.Commerce.Connect.Core" />
      <CartLine type="Sitecore.Commerce.Entities.Carts.CartLine, Sitecore.Commerce.Connect.Core" />
      <CartProduct type="Sitecore.Commerce.Entities.Carts.CartProduct, Sitecore.Commerce.Connect.Core" />
      <CartOption type="Sitecore.Commerce.Entities.Carts.CartOption, Sitecore.Commerce.Connect.Core" />
      <CartParty type="Sitecore.Commerce.Entities.Carts.CartParty, Sitecore.Commerce.Connect.Core" />
      <PaymentInfo type="Sitecore.Commerce.Entities.Carts.PaymentInfo, Sitecore.Commerce.Connect.Core" />
      <ShippingInfo type="Sitecore.Commerce.Entities.Carts.ShippingInfo, Sitecore.Commerce.Connect.Core" />
    </commerce.Entities>


    <!-- CART SERVICE PROVIDER 
         Defines the object which provides core cart services.
         Default implementation simply calls corresponding pipelines.
    -->
    <cartServiceProvider type="Sitecore.Commerce.Services.Carts.CartServiceProvider, Sitecore.Commerce.Connect.Core" singleInstance="true" />
    <commerceContactService type="Sitecore.Commerce.Utils.CommerceContactService, Sitecore.Commerce.Connect.Core" singleInstance="true" />

    <!--  EA STATE CART REPOSITORY
          Should be used for Cart CRUD operations for carts that stored in EA States.
    -->
    <!--<eaStateCartRepository type="Sitecore.Commerce.Data.Carts.EaStateCartRepository, Sitecore.Commerce.Connect.Core" singleInstance="true">
      <param ref="entityFactory" />
      <param ref="eaPlanProvider" />
    </eaStateCartRepository>-->

    <pipelines>

      <!--  GET CARTS
            This pipeline is responsible for performing a search for all carts that match specific criteria.
            The carts are managed by the commerce system. This pipeline reads cart data from
            the commerce system and converts that data into the Commerce format.
      -->
      <commerce.carts.getCarts>
      </commerce.carts.getCarts>

      <!--  CREATE OR RESUME CART
            Initiate the creation of a shopping cart and in the process to: 
              - Load persisted, potentially abandoned cart, if present;
              - Call resumeCart pipeline to resume loaded cart;
              - Call createCart pipeline to create cart if no cart was found on previous steps.
      -->
      <commerce.carts.createOrResumeCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunLoadCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunResumeCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunCreateCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.createOrResumeCart>

      <!--  CREATE CART
            Pipeline that is used internally by createOrResumeCart pipeline in case if existing cart wasn't found and should be created.
            This pipeline creates new cart with minimal amount of required fields, moves visitor to initial state in engagement plan, 
            saves cart to the storage and triggers CartCreate event.
      -->
      <commerce.carts.createCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.CreateCart.CreateCart, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.CreateCart.TriggerCartCreatedPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Cart Created</Name>
          <Text>Cart has been created.</Text>
        </processor>
      </commerce.carts.createCart>

      <!--  RESUME CART
            Pipeline that is used internally by createOrResumeCart pipeline in case if cart was loaded and should be resumed.
            This pipeline sets initial state to the loaded cart, moves visitor to initial state in engagement plan, 
            saves cart to the storage and triggers CartResume event.
      -->
      <commerce.carts.resumeCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.ResumeCart.ChangeCartStatus, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.ResumeCart.TriggerCartResumedPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Cart Resumed</Name>
          <Text>Cart resumed with cart id {0}.</Text>
        </processor>
      </commerce.carts.resumeCart>

      <!--  LOAD CART
            Gets the cart object that matches the specified criteria.
            This pipeline is responsible for reading data for a specific cart that is managed by the commerce system.
            This pipeline reads the cart data from the commerce system and converts that data into the Commerce format.
      -->
      <commerce.carts.loadCart>
      </commerce.carts.loadCart>

      <!--  SAVE CART 
            Saves the cart object to the external system and in Sitecore EA state.
      -->
      <commerce.carts.saveCart>
      </commerce.carts.saveCart>

      <!--  ADD CART LINES
            This pipeline is responsible for adding a new line to the shopping cart and recording a corresponding page event in DMS.
            This happens when a product is added to the cart.
      -->
      <commerce.carts.addCartLines>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.AddCartLines.AddLinesToCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
         
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartLinesPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Lines Added To Cart</Name>
          <Text>Lines added to cart.</Text>
        </processor>
      </commerce.carts.addCartLines>

      <!--  REMOVE CART LINES
            Responsibility is to remove cart lines from cart.
      -->
      <commerce.carts.removeCartLines>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.RemoveCartLines.RemoveLinesFromCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartLinesPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Lines Removed From Cart</Name>
          <Text>Lines removed from cart.</Text>
        </processor>
      </commerce.carts.removeCartLines>

      <!--  UPDATE CART LINES
            Responsibility is to update lines on cart.
      -->
      <commerce.carts.updateCartLines>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.UpdateCartLines.UpdateLinesOnCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartLinesPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Lines Updated On Cart</Name>
          <Text>Lines updated on cart.</Text>
        </processor>
      </commerce.carts.updateCartLines>

      <!--  DELETE CART 
            Responsibility is to delete a cart permanently: 
              - The cart is deleted.
              - Trigger event in DMS telling the cart is deleted.
      -->
      <commerce.carts.deleteCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Cart Deleted</Name>
          <Text>Cart has been deleted.</Text>
        </processor>
      </commerce.carts.deleteCart>

      <!--  UPDATE CART
            Responsibility is to pass an updated cart to the external commerce system.
            Trigger event in DMS telling the cart is being updated.
      -->
      <commerce.carts.updateCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.UpdateCart.UpdateCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.UpdateCart.TriggerCartUpdatedPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Cart Updated</Name>
          <Text>Cart has been updated.</Text>
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.UpdateCart.SetAnonymousPreferredEmail, Sitecore.Commerce.Connect.Core">
          <param ref="commerceContactService"></param>
        </processor>
        <processor type="Sitecore.Commerce.MarketingAutomation.Pipelines.Carts.Common.UpdateVisitorInAutomationPlan, Sitecore.Commerce.Connect.MarketingAutomation">
          <param ref="cartAutomationPlanCustomValueProvider" />
          <basePlanName>Abandoned Cart</basePlanName>
          <allowDuplicateContacts>false</allowDuplicateContacts>
          <allowUnauthenticatedContacts>true</allowUnauthenticatedContacts>
        </processor>
      </commerce.carts.updateCart>

      <!--  LOCK CART
            Responsibility is to set the cart in a locked state and prevent any modifications.
      -->
      <commerce.carts.lockCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.LockCart.LockCart, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Cart Locked</Name>
          <Text>Cart has been locked.</Text>
        </processor>
      </commerce.carts.lockCart>

      <!--  UNLOCK CART
            Responsibility is to set the cart in an unlocked state.
      -->
      <commerce.carts.unlockCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.UnlockCart.UnlockCart, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartPageEvent, Sitecore.Commerce.Connect.Core">
          <Name>Cart Unlocked</Name>
          <Text>Cart has been unlocked.</Text>
        </processor>
      </commerce.carts.unlockCart>

      <!-- MERGE CART
           Responsibility is to merge the given Anonymous cart to the given User cart.
      -->
      <commerce.carts.mergeCart>
        <processor type="Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart, Sitecore.Commerce.Connect.Core" >
          <param ref="cartServiceProvider"/>
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.mergeCart>

      <!--
            ADD PARTIES
      -->
      <commerce.carts.addParties>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.AddParties.AddPartiesToCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.addParties>

      <!--
            REMOVE PARTIES
      -->
      <commerce.carts.removeParties>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.RemoveParties.RemovePartiesFromCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.removeParties>

      <!--
            UPDATE PARTIES
      -->
      <commerce.carts.updateParties>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.UpdateParties.UpdatePartiesInCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.updateParties>

      <!--
            ADD SHIPPINGINFO
      -->
      <commerce.carts.addShippingInfo>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.addShippingInfo>

      <!--
            REMOVE SHIPPINGINFO
      -->
      <commerce.carts.removeShippingInfo>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.RemoveShippingInfo.RemoveShippingInfoFromCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.removeShippingInfo>

      <!--
            ADD PAYMENTINFO
      -->
      <commerce.carts.addPaymentInfo>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.addPaymentInfo>

      <!--
            REMOVE PAYMENTINFO
      -->
      <commerce.carts.removePaymentInfo>
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked, Sitecore.Commerce.Connect.Core">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Carts.RemovePaymentInfo.RemovePaymentInfoFromCart, Sitecore.Commerce.Connect.Core" />
        <processor type="Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart, Sitecore.Commerce.Connect.Core" />
      </commerce.carts.removePaymentInfo>

    </pipelines>
  </sitecore>
</configuration>
